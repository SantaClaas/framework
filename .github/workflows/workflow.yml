# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Test, Build, Publish

on:
  push:
    branches: ['main']
    tags:
      # Publish npm package when a new tag is pushed
      - '*.*.*'

# Allow one concurrent deployment
concurrency:
  group: 'workflow'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      IS_RELEASE: ${{ steps.check-tag.outputs.IS_RELEASE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '21.x'
          cache: 'npm'
      - run: npm ci
      # Test does not require build in this case
      - run: npm test
      - run: npm run build
      - name: Check if tag is release tag
        id: check-tag
        run: |
          echo ${{ github.event.ref }}
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "IS_RELEASE=true" >> "$GITHUB_OUTPUT"
          else
              echo "IS_RELEASE=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        if: ${{ steps.check-tag.outputs.IS_RELEASE == 'true' }}
        with:
          name: npm-package-files
          # Files always included and from paclage.json
          # See https://docs.npmjs.com/cli/v10/configuring-npm/package-json#files
          path: |
            package.json
            README.md
            LICENSE
            dist

  publish-npm:
    # Only publish when a release tag is pushed
    needs: build
    if: ${{ needs.build.outputs.IS_RELEASE == 'true' }}
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
    steps:
      - name: Setup .npmrc file to publish to npm
        run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: npm-package-files
      - name: Bump version
        # Bump ephemeral version based on git tag which we previously confirmed to be set
        run: npm --no-git-tag-version version from-git
      - name: Publish artifacts to npm
        # Need to add --access public to publish scoped package
        run: npm publish --access public
